[{"C:\\xampp\\htdocs\\maptest\\src\\reportWebVitals.js":"1","C:\\xampp\\htdocs\\maptest\\src\\App.js":"2","C:\\xampp\\htdocs\\maptest\\src\\Map.jsx":"3","C:\\xampp\\htdocs\\maptest\\src\\index.js":"4","C:\\xampp\\htdocs\\maptest\\src\\getIcons.js":"5","C:\\xampp\\htdocs\\maptest\\src\\Navbar.jsx":"6","C:\\xampp\\htdocs\\maptest\\src\\menu.js":"7"},{"size":362,"mtime":1606298928693,"results":"8","hashOfConfig":"9"},{"size":183,"mtime":1606800044041,"results":"10","hashOfConfig":"9"},{"size":1013,"mtime":1606306725702,"results":"11","hashOfConfig":"9"},{"size":484,"mtime":1606908532278,"results":"12","hashOfConfig":"9"},{"size":2781,"mtime":1606306711593,"results":"13","hashOfConfig":"9"},{"size":3653,"mtime":1606908859560,"results":"14","hashOfConfig":"9"},{"size":381,"mtime":1606907239052,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"g4mw68",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\xampp\\htdocs\\maptest\\src\\reportWebVitals.js",[],"C:\\xampp\\htdocs\\maptest\\src\\App.js",[],"C:\\xampp\\htdocs\\maptest\\src\\Map.jsx",["33","34"],"import React, { useEffect, useState } from 'react';\r\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\r\nimport { icon, icons, getLocations } from './getIcons';\r\n\r\nexport const Map = () => {\r\n  const [locations, setLocations] = useState([]);\r\n  useEffect(() => {\r\n    const locat = getLocations();\r\n    console.log(locat);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <MapContainer\r\n        center={[51.11535749698708, 17.034426774577256]}\r\n        zoom={7}\r\n        style={{ height: '100vh' }}\r\n      >\r\n        <TileLayer\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n        {icons.map(({ id, position }) => (\r\n          <Marker position={position} icon={icon} key={id}>\r\n            <Popup>\r\n              A pretty CSS3 popup. <br /> Easily customizable.\r\n            </Popup>\r\n          </Marker>\r\n        ))}\r\n      </MapContainer>\r\n    </div>\r\n  );\r\n};\r\n",["35","36"],"C:\\xampp\\htdocs\\maptest\\src\\index.js",[],"C:\\xampp\\htdocs\\maptest\\src\\getIcons.js",[],"C:\\xampp\\htdocs\\maptest\\src\\Navbar.jsx",["37","38"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport { Facebook, YouTube } from '@material-ui/icons';\r\nimport { blue, red } from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    borderBottom: `1px solid ${theme.palette.primary.dark}`,\r\n    fontWeight: 600,\r\n    paddingTop: 5,\r\n    paddingBottom: 5,\r\n  },\r\n  nav: {\r\n    flex: '1 1 0',\r\n    justifyContent: 'flex-end',\r\n    alignItems: 'center',\r\n    display: 'flex',\r\n  },\r\n  logo: {\r\n    width: theme.spacing(7),\r\n    height: theme.spacing(7),\r\n  },\r\n  menuItem: {\r\n    display: 'flex',\r\n    marginLeft: theme.spacing(2),\r\n    color: `${theme.palette.primary.contrastText}`,\r\n    textDecoration: 'none',\r\n    transition: 'color 100ms ease-in-out',\r\n    '&:hover': {\r\n      color: `${theme.palette.secondary.main}`,\r\n      borderBottom: `1px solid ${theme.palette.secondary.dark}`,\r\n    },\r\n  },\r\n  divider: {\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    opacity: '.25',\r\n    backgroundColor: theme.palette.primary.contrastText,\r\n  },\r\n  fbIcon: {\r\n    display: 'flex',\r\n    color: blue[300],\r\n    '&:hover': {\r\n      color: blue[400],\r\n    },\r\n  },\r\n  ytIcon: {\r\n    display: 'flex',\r\n    marginRight: theme.spacing(2),\r\n    color: red[300],\r\n    '&:hover': {\r\n      color: red[400],\r\n    },\r\n  },\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  paper: {\r\n    backgroundColor: '#3f51b5',\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nconst Navbar = () => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <AppBar position=\"sticky\" color=\"primary\" elevation={0} className={classes.root}>\r\n      <Toolbar>\r\n        <nav className={classes.nav}>\r\n          <Divider orientation=\"vertical\" flexItem className={classes.divider} />\r\n          <a\r\n            to=\"https://www.youtube.com/user/grupahunter\"\r\n            target=\"blank\"\r\n            className={classes.ytIcon}\r\n          >\r\n            <YouTube />\r\n          </a>\r\n          <a to=\"https://www.facebook.com/grupahunter\" target=\"blank\" className={classes.fbIcon}>\r\n            <Facebook />\r\n          </a>\r\n        </nav>\r\n        <button type=\"button\" onClick={handleOpen}>\r\n          react-transition-group\r\n        </button>\r\n        <Modal\r\n          aria-labelledby=\"transition-modal-title\"\r\n          aria-describedby=\"transition-modal-description\"\r\n          className={classes.modal}\r\n          open={open}\r\n          onClose={handleClose}\r\n          closeAfterTransition\r\n          BackdropComponent={Backdrop}\r\n          BackdropProps={{\r\n            timeout: 500,\r\n          }}\r\n        >\r\n          <Fade in={open}>\r\n            <div className={classes.paper}>\r\n              <ul>\r\n                <li>Home</li>\r\n                <li>Home</li>\r\n                <li>Home</li>\r\n                <li>Home</li>\r\n                <li>Home</li>\r\n                <li>Home</li>\r\n              </ul>\r\n            </div>\r\n          </Fade>\r\n        </Modal>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","C:\\xampp\\htdocs\\maptest\\src\\menu.js",[],{"ruleId":"39","severity":1,"message":"40","line":6,"column":10,"nodeType":"41","messageId":"42","endLine":6,"endColumn":19},{"ruleId":"39","severity":1,"message":"43","line":6,"column":21,"nodeType":"41","messageId":"42","endLine":6,"endColumn":33},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":92,"column":11,"nodeType":"50","endLine":96,"endColumn":12},{"ruleId":"48","severity":1,"message":"49","line":99,"column":11,"nodeType":"50","endLine":99,"endColumn":98},"no-unused-vars","'locations' is assigned a value but never used.","Identifier","unusedVar","'setLocations' is assigned a value but never used.","no-native-reassign",["51"],"no-negated-in-lhs",["52"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]